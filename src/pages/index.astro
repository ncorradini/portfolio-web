---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import Layout from "@/layouts/Layout.astro";
import SocialLinks from "@/components/SocialLinks.astro";
import PostCard from "@/components/PostCard.astro";
import Link from "@/components/shared/Link.astro";
import convertAsteriskToStrongTag from "@/utils/convertAsteriskToStrongTag";
import presentation from "@/data/presentation";

const allwork = (await getCollection("work"))
  .sort(
    (a, b) =>
      new Date(b.data.dateStart).valueOf() -
      new Date(a.data.dateStart).valueOf()
  )
  .slice(0, 3);

const work = await Promise.all(
  allwork.map(async (item) => {
    const { Content } = await item.render();
    return { ...item, Content };
  })
);

const posts = (await getCollection("posts")).sort(function (first, second) {
  return second.data.publishedAt.getTime() - first.data.publishedAt.getTime();
});
---

<Layout>
  <main class="flex flex-col gap-20">
    <article
      class="flex flex-col gap-8 md:flex-row-reverse md:justify-end md:gap-12"
    >
      <div class="flex flex-col gap-8">
        <h1 class="text-3xl text-neutral-100">
          {presentation.title}
        </h1>

        <h2
          class="w-auto max-w-[60ch] leading-6"
          set:html={convertAsteriskToStrongTag(presentation.description)}
        />

        <SocialLinks />
      </div>
    </article>

    {
      posts.length !== 0 && (
        <article class="flex flex-col gap-8">
          <header class="flex w-full flex-row justify-between gap-2">
            <h3 class="text-lg text-neutral-100">Posts</h3>
            <Link href="/posts" label="Ver más" isUnderline target="_self" />
          </header>
          <section class="flex flex-col gap-4 md:flex-row md:flex-wrap">
            {posts.length !== 0 &&
              posts
                .slice(0, 2)
                .map((post) => (
                  <PostCard
                    publishedAt={post.data.publishedAt}
                    title={post.data.title}
                    description={post.data.description}
                    slug={post.slug}
                  />
                ))}
          </section>
        </article>
      )
    }

    <article class="animate space-y-6">
      <div class="flex flex-wrap items-center justify-between gap-y-2">
        <h3 class="text-lg text-neutral-100">Experiencia laboral</h3>
      </div>
      <ul class="flex flex-col space-y-4">
        {
          work.map((entry) => (
            <li>
              <div class="text-white">{entry.data.company}</div>
              <div class="flex text-sm opacity-75">
                {entry.data.role}
                <span class="ml-auto text-xs">
                  {entry.data.dateStart} - {entry.data.dateEnd}
                </span>
              </div>
              <article class="mt-1">
                <entry.Content />
              </article>
            </li>
          ))
        }
      </ul>
    </article>

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg text-neutral-100">Contáctame</h3>
      </header>
      <p>
        Envíeme un correo electrónico a
        <Link href={`mailto:${presentation.mail}`} label={presentation.mail} />
        o sígueme a través de mis redes sociales.
      </p>

      <SocialLinks />
    </article>
  </main>
</Layout>
